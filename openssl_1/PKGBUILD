# Maintainer: Alexey Pavlov <Alexpux@gmail.com>
# Contributor: Thach Nguyen (github.com/thachnn)

_with_runtime="yes"
_with_docs="no"

_realname=openssl
_basename="${_realname}_1"
pkgbase=mingw-w64-$_basename
pkgname=("${MINGW_PACKAGE_PREFIX}-$_basename")
_ver=1.1.1t
# use a pacman compatible version scheme
pkgver=${_ver/[a-z]/.${_ver//[0-9.]/}}
[ "$_with_runtime" = "only" ] && pkgver="$pkgver.runtime" || \
[ "$_with_runtime" = "yes" ] || pkgver="$pkgver.devel"
pkgrel=1
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
pkgdesc="The Open Source toolkit for Secure Sockets Layer and Transport Layer Security (mingw-w64)"
optdepends=("${MINGW_PACKAGE_PREFIX}-ca-certificates")
depends=(
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-autotools"
             "${MINGW_PACKAGE_PREFIX}-cc")
# Use mingw cflags instead of configured ones
options=('strip' '!buildflags' 'staticlibs' '!debug')
license=('custom:BSD')
url="https://www.openssl.org"
source=(https://www.openssl.org/source/${_realname}-${_ver}.tar.gz{,.asc}
        'https://github.com/msys2/MINGW-packages/raw/master/mingw-w64-pathtools/pathtools.c'
        'https://github.com/msys2/MINGW-packages/raw/master/mingw-w64-pathtools/pathtools.h'
        'openssl-1.1.1-relocation.patch'
        'openssl-1.1.1-mingw-arm.patch')
sha256sums=('8dee9b24bdb1dcbf0c3d1e9b02fb8f6bf22165e807f45adeb7c9677536859d3b'
            'SKIP'
            '08209cbf1633fa92eae7e5d28f95f8df9d6184cc20fa878c99aec4709bb257fd'
            '965d3921ec4fdeec94a2718bc2c85ce5e1a00ea0e499330a554074a7ae15dfc6'
            '300f023486e96cce2ef61a53ad7ac60bdf63fdd1f8bd9ba82bf24ef7c9bc0bac'
            'a86950f3e6e99995aa0ec875c6590b73d2126040340b6119b494e1aae9053ca1')

# https://www.openssl.org/community/otc.html
validpgpkeys=(
  '8657ABB260F056B1E5190839D9C4D26D0E604491' # Matt Caswell <matt@openssl.org>
  '7953AC1FBC3DC8B3B292393ED5E9E43F7DF9EE8C' # Richard Levitte <richard@levitte.org>
  'A21FAB74B0088AA361152586B8EF1A6BA9DA2D5C' # Tomáš Mráz <tm@t8m.info>
  'B7C1C14360F353A36862E4D5231C84CDDCC69C45' # Paul Dale <pauli@openssl.org>
)

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}
# =========================================== #

prepare() {
  cd ${srcdir}/${_realname}-${_ver}

  cp -fHv "${srcdir}"/pathtools.c crypto/
  cp -fHv "${srcdir}"/pathtools.h ./

  apply_patch_with_msg \
     openssl-1.1.1-relocation.patch \
     openssl-1.1.1-mingw-arm.patch
}

build() {
  # No support for out-of-source builds
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  if [ "$_with_runtime" = "yes" ]; then
    _ssldir=ssl
  elif [ "$_with_runtime" = "only" ]; then
    _ssldir=ssl
    sed -i 's/ install_dev\b//' "../${_realname}-${_ver}/Configurations/unix-Makefile.tmpl"
  else
    _ssldir=etc/ssl
    sed -i -e 's/nodep build_programs_nodep/nodep/;s/ install_runtime\b//' \
       "../${_realname}-${_ver}/Configurations/unix-Makefile.tmpl"
  fi

  case "${CARCH}" in
    i?86)
      _mingw=mingw
      ;;
    x86_64)
      _mingw=mingw64
      ;;
    armv7)
      _mingw="mingwarm32 no-asm"
      ;;
    aarch64)
      _mingw="mingwarm64 no-asm"
      ;;
  esac

  CFLAGS="${CFLAGS/-O2 /}" \
  MSYS2_ARG_CONV_EXCL="--prefix=" \
  ../"${_realname}-${_ver}"/Configure \
    --prefix=${MINGW_PREFIX} \
    --openssldir=$_ssldir \
    ${_mingw} \
    shared \
    zlib-dynamic \
    enable-camellia \
    enable-capieng \
    enable-idea \
    enable-mdc2 \
    enable-rc5  \
    enable-rfc3779 \
    -D__MINGW_USE_VC2005_COMPAT \
    -DOPENSSLBIN=\"\\\"${MINGW_PREFIX}/bin\\\"\"

  MSYS2_ARG_CONV_EXCL="-DENGINESDIR=;-DOPENSSLDIR=;-DOPENSSLBIN=" \
  make
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"

  make VERBOSE=1 test
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  _targets=install_sw
  [ "$_with_runtime" != "yes" -a "$_with_runtime" != "only" ] || _targets="$_targets install_ssldirs"
  [ "$_with_docs" != "yes" ] || _targets="$_targets install_docs"

  make DESTDIR="${pkgdir}" MANSUFFIX=ssl $_targets
  install -Dm644 "../${_realname}-${_ver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/$_basename/LICENSE"

  install -m644 "../${_realname}-${_ver}/ms/applink.c" "${pkgdir}${MINGW_PREFIX}/include/$_realname/" || true
  rm -rf "${pkgdir}${MINGW_PREFIX}"/{bin/c_rehash,ssl/misc}
}
